@using System.Globalization;
@using sadu.Models
@model List<Object>

@{ 
    //cast 2 objects from model
    String deadline = (String)Model.ElementAt(0);
    Dictionary<String, List<KeyValuePair<String, Object>>> submissions = (Dictionary<String, List<KeyValuePair<String, Object>>>)Model.ElementAt(1);

    DateTime deadline_dt = DateTime.ParseExact(deadline, "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture);

    //build array of files for multiple download
    RouteValueDictionary rv = new RouteValueDictionary();

    foreach(var item in submissions)
    {
        rv.Add(item.Key, (String)item.Value.Find(p => p.Key == "file_path").Value);
    }

}

@if (submissions.Count() != 0)
{
    <div class="row">
        <div class="col col-sm-12 uploaded-files-container">
            <div class="card">
                <div class="header">
                    <h5 class="title">Uploaded Files</h5>
                    @if ((bool)Session["isAdmin"])
                {<a class="btn btn-default card-header-btn download-all-btn" onclick>Download All</a>}
                    <hr />
                </div>
                <div class="content">
                    <ul class="files-list">
                        @foreach (var submission in submissions)
                        {
                            sadu.Models.Organization organization = (sadu.Models.Organization)submission.Value.Find(v => v.Key == "organization").Value;
                            String date = (String)submission.Value.Find(v => v.Key == "date_uploaded").Value;
                            String time = (String)submission.Value.Find(v => v.Key == "time_uploaded").Value;
                            String date_time = DateTime.ParseExact(date + time, "MMddyyyyHHmm", CultureInfo.InvariantCulture).ToString("MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture);
                            DateTime submitted_dt = DateTime.ParseExact(date_time, "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture);
                            String file_name = submission.Value.Find(s => s.Key == "file_name").Value.ToString();

                            <li>
                                <div class="well well-sm">
                                    <a href="@Url.Action("Download", "Submissions", new { path = submission.Value.Find(v => v.Key == "file_path").Value, fileName = file_name })" onclick="">@file_name </a>
                                    <span>
                                        submitted by @submission.Value.Find(v => v.Key == "user_name").Value
                                        <img src="@("\\Assets\\" + organization.OrganizationImage.Image)" data-toggle="tooltip" data-placement="top" title="@organization.name" />
                                        on @date_time

                                        @* Mark late if date_time is past deadline_dt *@
                                        @if(submitted_dt > deadline_dt)
                                        {
                                            <span style="font-size: 15px; color:red; text-transform:uppercase">late</span>
                                        }
                                    </span>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        $(function () {
            $(".well span").after()
        });
    </script>
}